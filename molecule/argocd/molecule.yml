---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
    requirements-file: requirements.yml
platforms:
  - name: localhost
driver:
  name: delegated
provisioner:
  name: ansible
  playbooks:
    prepare: ../common/prepare.yml
    create: ../common/create.yml
    converge: ../common/converge.yml
    verify: ../common/verify.yml
    destroy: ../common/destroy.yml
  config_options:
    defaults:
      callbacks_enabled: ansible.posix.profile_tasks
  inventory:
    hosts:
      all:
        vars:
          # test-only vardefs
          ansible_connection: local
          ansible_python_interpreter: python
          k8s_kubeconfig: ${MOLECULE_EPHEMERAL_DIRECTORY}/config
          k8s_helm_bin: ${MOLECULE_EPHEMERAL_DIRECTORY}/helm
          k8s_certmanager_issuer_name: local
          k8s_cluster_name: molecule.nephelai.io

          # kind vardefs
          kind_network_addr: 172.19.0.0/16
          kind_bin: ${MOLECULE_EPHEMERAL_DIRECTORY}/kind
          kind_cluster_name: molecule-k8s-${MOLECULE_SCENARIO_NAME}
          kind_kubeconfig: "{{ k8s_kubeconfig }}"
          kind_registry_deploy: false
          kind_proxy_deploy: true
          kind_proxy_cleanup: false
          kind_nodes: 1

          # role vardefs
          k8s_address_pool_private_iprange: "{{ kind_network_addr | ansible.utils.ipsubnet(24, 2) }}"
          k8s_address_pool_public_iprange: "{{ kind_network_addr | ansible.utils.ipsubnet(24, 3) }}"
          k8s_metallb_speaker_secret: secret
          k8s_verifier_path: ${MOLECULE_EPHEMERAL_DIRECTORY}
          k8s_opensearch_deploy: false
          k8s_strimzi_deploy: false
          k8s_argocd_deploy: true
          k8s_longhorn_deploy: false
          k8s_zalando_deploy: false
          k8s_mysql_deploy: false
          k8s_nginx_deploy: true
          k8s_molecule_cluster_type: kind
          k8s_argocd_apps_chart_values:
            applications:
              - name: guestbook
                namespace: argocd
                finalizers:
                  - resources-finalizer.argocd.argoproj.io
                project: default
                sources:
                  - repoURL: https://github.com/argoproj/argocd-example-apps.git
                    path: guestbook
                    targetRevision: HEAD
                destination:
                  server: https://kubernetes.default.svc
                  namespace: guestbook
                syncPolicy:
                  automated:
                    prune: true
                    selfHeal: true
                    allowEmpty: false
                  syncOptions:
                    - CreateNamespace=true
verifier:
  name: ansible
scenario:
  create_sequence:
    - dependency
    - prepare
    - create
  check_sequence:
    - dependency
    - cleanup
    - prepare
    - destroy
    - create
    - converge
    - check
    - destroy
  converge_sequence:
    - dependency
    - prepare
    - create
    - converge
  destroy_sequence:
    - dependency
    - cleanup
    - prepare
    - destroy
  test_sequence:
    - dependency
    - syntax
    - cleanup
    - prepare
    - destroy
    - syntax
    - create
    - converge
    - idempotence
    - converge
    - verify
    - side_effect
    - cleanup
    - destroy
