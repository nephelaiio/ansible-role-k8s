---
name: molecule

on:
  pull_request:
  schedule:
    - cron: "0 5 * * 5"

defaults:
  run:
    working-directory: "nephelaiio.k8s"

jobs:
  molecule:
    name: molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scenario:
          - default
          - argocd
          - longhorn
          - mysql
          - zalando
          - strimzi
        include:
          - release: v0.26.0
            image: v1.32.0
          - release: v0.26.0
            image: v1.31.4
          - release: v0.26.0
            image: v1.29.12
          - release: v0.25.0
            image: v1.28.15
          - release: v0.25.0
            image: v1.27.16
          - release: 0.25.0
            image: v1.26.15
          - release: 0.24.0
            image: v1.25.16
          - release: 0.22.0
            image: v1.24.17
          - release: 0.22.0
            image: v1.23.17
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v4
        with:
          path: "nephelaiio.k8s"

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install helm
        uses: azure/setup-helm@v4
        with:
          version: "latest"
          token: ${{ secrets.GITHUB_TOKEN }}
        id: helm

      - name: Install Kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.25.0"
          skipClusterCreation: true

      - name: Install Make
        run: sudo apt-get install -y make

      - name: Install dependencies
        run: make install

      - name: Disable apparmor
        run: |
          set -x
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_unconfined=0
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0

      - name: run molecule tests.
        run: make test
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          HELM_BIN: ${{ steps.helm.outputs.helm-path }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          MOLECULE_SCENARIO: ${{ matrix.scenario }}
