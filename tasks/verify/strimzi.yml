---
- name: Set test facts
  ansible.builtin.set_fact:
    _strimzi_test_namespace: strimzi-test

- name: Create Strimzi namespace
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    api_version: v1
    kind: Namespace
    name: "{{ _strimzi_test_namespace }}"
  register: strimzi_namespace_create
  retries: "{{ k8s_retry_num }}"
  delay: "{{ k8s_retry_delay }}"
  until: strimzi_namespace_create is success

- name: Create test Zookeeper Strimzi cluster
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    resource_definition:
      apiVersion: kafka.strimzi.io/v1beta2
      kind: Kafka
      metadata:
        name: strimzi-zookeeper
        namespace: "{{ _strimzi_test_namespace }}"
      spec:
        kafka:
          version: 3.7.0
          replicas: 1
          brokers: 1
          storage:
            type: persistent-claim
            size: 10Gi
            class: standard
          listeners:
            - name: plain
              port: 9092
              type: internal
              tls: false
        zookeeper:
          replicas: 1
          storage:
            type: persistent-claim
            size: 10Gi
            class: standard
        entityOperator:
          template:
            topicOperatorContainer:
              env:
                - name: STRIMZI_USE_ZOOKEEPER_TOPIC_STORE
                  value: "true"
    wait: true
    wait_condition:
      type: Ready
    wait_sleep: 10
    wait_timeout: 60
  register: strimzi_cluster_create
  retries: "{{ k8s_retry_num }}"
  delay: "{{ k8s_retry_delay }}"
  until: strimzi_cluster_create is success

- name: Create test Strimzi controller NodePool
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    resource_definition:
      apiVersion: kafka.strimzi.io/v1beta2
      kind: KafkaNodePool
      metadata:
        name: strimzi-controller
        namespace: "{{ _strimzi_test_namespace }}"
        labels:
          strimzi.io/cluster: strimzi-kraft
      spec:
        replicas: 1
        roles:
          - controller
        storage:
          type: jbod
          volumes:
            - id: 0
              type: persistent-claim
              size: 10Gi
              class: standard

- name: Create test Strimzi broker NodePool
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    resource_definition:
      apiVersion: kafka.strimzi.io/v1beta2
      kind: KafkaNodePool
      metadata:
        name: strimzi-broker
        namespace: "{{ _strimzi_test_namespace }}"
        labels:
          strimzi.io/cluster: strimzi-kraft
      spec:
        replicas: 1
        roles:
          - broker
        storage:
          type: jbod
          volumes:
            - id: 0
              type: persistent-claim
              size: 10Gi
              class: standard

- name: Create test Kraft Strimzi cluster
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    resource_definition:
      apiVersion: kafka.strimzi.io/v1beta2
      kind: Kafka
      metadata:
        name: strimzi-kraft
        namespace: "{{ _strimzi_test_namespace }}"
        annotations:
          strimzi.io/kraft: enabled
          strimzi.io/node-pools: enabled
      spec:
        kafka:
          version: 3.7.0
          listeners:
            - name: plain
              port: 9092
              type: internal
              tls: false
    wait: true
    wait_condition:
      type: Ready
    wait_sleep: 10
    wait_timeout: 60
  register: strimzi_cluster_create
  retries: "{{ k8s_retry_num }}"
  delay: "{{ k8s_retry_delay }}"
  until: strimzi_cluster_create is success
