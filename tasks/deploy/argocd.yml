---
- name: Set deployment facts
  ansible.builtin.set_fact:
    _query: 'kubernetes.core.k8s'
    _ns: "{{ k8s_argocd_namespace }}"
    _config: "{{ k8s_kubeconfig }}"
    _resource: 'argocd-repo-server'

- name: Install argocd chart
  kubernetes.core.helm:
    name: argocd
    chart_ref: "{{ k8s_argocd_chart.name }}"
    chart_repo_url: "{{ k8s_argocd_chart.repo }}"
    chart_version: "{{ _release }}"
    release_namespace: "{{ k8s_argocd_namespace }}"
    create_namespace: true
    state: present
    wait: true
    wait_timeout: "{{ k8s_argocd_wait_timeout }}s"
    values: "{{ k8s_argocd_chart_values }}"
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    binary_path: "{{ lookup('ansible.builtin.env', 'HELM_BIN', default=k8s_helm_bin) }}"
  vars:
    _release: "{{ k8s_argocd_chart_release | default(k8s_argocd_chart.release) }}"

- name: Query argocd-repo-server definition
  ansible.builtin.set_fact:
    _reposerver_def: "{{ _reposerver_query | first }}"
  vars:
    _reposerver_query: "{{ query(_query, kind='Deployment', namespace=_ns, resource_name=_resource, kubeconfig=_config) }}"

- name: Patch argocd reposerver deployment
  kubernetes.core.k8s_json_patch:
    kind: Deployment
    name: argocd-repo-server
    namespace: "{{ k8s_argocd_namespace }}"
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    patch:
      - op: replace
        path: /spec/template/spec/containers/0/env
        value: "{{ _reposerver_env_new }}"
  vars:
    _reposerver_env_timeout:
      name: ARGOCD_EXEC_TIMEOUT
      value: "{{ k8s_argocd_exec_timeout }}"
    _reposerver_env_def: "{{ _reposerver_def.spec.template.spec.containers[0].env }}"
    _reposerver_env_pre: "{{ _reposerver_env_def | rejectattr('name', 'equalto', _reposerver_env_timeout.name) }}"
    _reposerver_env_new: "{{ _reposerver_env_pre + [_reposerver_env_timeout] }}"
    _reposerver_def: "{{ _reposerver_query | first }}"
    _reposerver_query: "{{ query(_query, kind='Deployment', namespace=_ns, resource_name=_resource, kubeconfig=_config) }}"
  changed_when: false

- name: Deploy argocd ingress
  kubernetes.core.k8s:
    namespace: "{{ k8s_argocd_namespace }}"
    state: present
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    resource_definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: argocd-ingress
        annotations:
          nginx.ingress.kubernetes.io/affinity: "cookie"
          nginx.ingress.kubernetes.io/affinity-mode: "persistent"
          cert-manager.io/cluster-issuer: "{{ k8s_certmanager_issuer_name }}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/configuration-snippet: |-
            proxy_ssl_server_name on;
            proxy_ssl_name $host;
      spec:
        ingressClassName: nginx-private
        tls:
          - hosts:
              - "{{ k8s_argocd_hostname }}"
            secretName: "{{ k8s_argocd_hostname }}"
        rules:
          - host: "{{ k8s_argocd_hostname }}"
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: argocd-server
                      port:
                        number: 443
  retries: "{{ k8s_retry_num }}"
  delay: "{{ k8s_retry_delay }}"
  register: argocd_ingress_create
  until: argocd_ingress_create is success

- name: Install argocd-apps chart
  kubernetes.core.helm:
    name: argocd-apps
    chart_ref: "{{ k8s_argocd_apps_chart.name }}"
    chart_repo_url: "{{ k8s_argocd_apps_chart.repo }}"
    chart_version: "{{ _release }}"
    release_namespace: "{{ k8s_argocd_apps_namespace }}"
    create_namespace: true
    state: present
    wait: true
    wait_timeout: "{{ k8s_argocd_apps_wait_timeout }}s"
    values: "{{ k8s_argocd_apps_chart_values }}"
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    binary_path: "{{ lookup('ansible.builtin.env', 'HELM_BIN', default=k8s_helm_bin) }}"
  vars:
    _release: "{{ k8s_argocd_apps_chart_release | default(k8s_argocd_apps_chart.release) }}"
