---
- name: Deploy nginx aws ingress controllers
  kubernetes.core.helm:
    name: "{{ ingress_name }}"
    chart_ref: "{{ k8s_nginx_chart.name }}"
    chart_repo_url: "{{ k8s_nginx_chart.repo }}"
    chart_version: "{{ k8s_nginx_chart.release }}"
    release_namespace: "{{ ingress_namespace }}"
    state: present
    wait: true
    wait_timeout: "{{ k8s_nginx_wait_timeout }}"
    create_namespace: true
    kubeconfig: "{{ k8s_kubeconfig | default(omit) }}"
    binary_path: "{{ lookup('env', 'HELM_BIN', default=k8s_helm_bin) }}"
    values:
      controller:
        allowSnippetAnnotations: true
        ingressClassResource:
          name: "{{ ingress_class }}"
          controllerValue: "k8s.io/{{ ingress_name }}"
        service:
          external:
            enabled: False
          internal:
            enabled: True
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
              service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
              service.beta.kubernetes.io/aws-load-balancer-type: "external"
              service.beta.kubernetes.io/aws-load-balancer-scheme: "{{ item.scheme }}"
              service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "instance"
              service.beta.kubernetes.io/aws-load-balancer-name: "{{ k8s_cluster_name }}-{{ item.name }}"
  vars:
    ingress_class: "nginx-{{ item.name }}"
    ingress_name: "{{ item.name }}"
    ingress_namespace: "{{ ingress_class }}"
  loop_control:
    label: "{{ ingress_name }}"
  loop: "{{ k8s_address_pools }}"
